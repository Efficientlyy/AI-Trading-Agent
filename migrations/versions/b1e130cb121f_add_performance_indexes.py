"""Add performance indexes

Revision ID: b1e130cb121f
Revises: a883faec8698
Create Date: 2025-04-12 19:32:57.310311

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b1e130cb121f'
down_revision: Union[str, None] = 'a883faec8698'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('assets', 'is_active',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False)
    op.create_index('idx_asset_active_type', 'assets', ['is_active', 'asset_type'], unique=False)
    op.create_index('idx_asset_symbol_type', 'assets', ['symbol', 'asset_type'], unique=False)
    op.create_index(op.f('ix_assets_asset_type'), 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_is_active'), 'assets', ['is_active'], unique=False)
    op.create_index('idx_backtest_date_range', 'backtests', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_backtest_user_strategy', 'backtests', ['user_id', 'strategy_id'], unique=False)
    op.create_index(op.f('ix_backtests_created_at'), 'backtests', ['created_at'], unique=False)
    op.create_index(op.f('ix_backtests_end_date'), 'backtests', ['end_date'], unique=False)
    op.create_index(op.f('ix_backtests_start_date'), 'backtests', ['start_date'], unique=False)
    op.create_index(op.f('ix_backtests_strategy_id'), 'backtests', ['strategy_id'], unique=False)
    op.create_index(op.f('ix_backtests_user_id'), 'backtests', ['user_id'], unique=False)
    op.create_index('idx_ohlcv_asset_timeframe_timestamp', 'ohlcv', ['asset_id', 'timeframe', 'timestamp'], unique=False)
    op.create_index('idx_ohlcv_timestamp_range', 'ohlcv', ['asset_id', 'timeframe', 'timestamp'], unique=False)
    op.create_index(op.f('ix_ohlcv_asset_id'), 'ohlcv', ['asset_id'], unique=False)
    op.create_index(op.f('ix_ohlcv_timeframe'), 'ohlcv', ['timeframe'], unique=False)
    op.create_index(op.f('ix_ohlcv_timestamp'), 'ohlcv', ['timestamp'], unique=False)
    op.create_index('idx_snapshot_backtest_time', 'portfolio_snapshots', ['backtest_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_portfolio_snapshots_backtest_id'), 'portfolio_snapshots', ['backtest_id'], unique=False)
    op.create_index(op.f('ix_portfolio_snapshots_timestamp'), 'portfolio_snapshots', ['timestamp'], unique=False)
    op.create_index('idx_sentiment_asset_source_timestamp', 'sentiment_data', ['asset_id', 'source', 'timestamp'], unique=False)
    op.create_index('idx_sentiment_timestamp_range', 'sentiment_data', ['asset_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_sentiment_data_asset_id'), 'sentiment_data', ['asset_id'], unique=False)
    op.create_index(op.f('ix_sentiment_data_source'), 'sentiment_data', ['source'], unique=False)
    op.create_index(op.f('ix_sentiment_data_timestamp'), 'sentiment_data', ['timestamp'], unique=False)
    op.create_index('idx_trade_backtest_symbol', 'trades', ['backtest_id', 'symbol'], unique=False)
    op.create_index('idx_trade_backtest_timestamp', 'trades', ['backtest_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_trades_backtest_id'), 'trades', ['backtest_id'], unique=False)
    op.create_index(op.f('ix_trades_side'), 'trades', ['side'], unique=False)
    op.create_index(op.f('ix_trades_symbol'), 'trades', ['symbol'], unique=False)
    op.create_index(op.f('ix_trades_timestamp'), 'trades', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trades_timestamp'), table_name='trades')
    op.drop_index(op.f('ix_trades_symbol'), table_name='trades')
    op.drop_index(op.f('ix_trades_side'), table_name='trades')
    op.drop_index(op.f('ix_trades_backtest_id'), table_name='trades')
    op.drop_index('idx_trade_backtest_timestamp', table_name='trades')
    op.drop_index('idx_trade_backtest_symbol', table_name='trades')
    op.drop_index(op.f('ix_sentiment_data_timestamp'), table_name='sentiment_data')
    op.drop_index(op.f('ix_sentiment_data_source'), table_name='sentiment_data')
    op.drop_index(op.f('ix_sentiment_data_asset_id'), table_name='sentiment_data')
    op.drop_index('idx_sentiment_timestamp_range', table_name='sentiment_data')
    op.drop_index('idx_sentiment_asset_source_timestamp', table_name='sentiment_data')
    op.drop_index(op.f('ix_portfolio_snapshots_timestamp'), table_name='portfolio_snapshots')
    op.drop_index(op.f('ix_portfolio_snapshots_backtest_id'), table_name='portfolio_snapshots')
    op.drop_index('idx_snapshot_backtest_time', table_name='portfolio_snapshots')
    op.drop_index(op.f('ix_ohlcv_timestamp'), table_name='ohlcv')
    op.drop_index(op.f('ix_ohlcv_timeframe'), table_name='ohlcv')
    op.drop_index(op.f('ix_ohlcv_asset_id'), table_name='ohlcv')
    op.drop_index('idx_ohlcv_timestamp_range', table_name='ohlcv')
    op.drop_index('idx_ohlcv_asset_timeframe_timestamp', table_name='ohlcv')
    op.drop_index(op.f('ix_backtests_user_id'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_strategy_id'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_start_date'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_end_date'), table_name='backtests')
    op.drop_index(op.f('ix_backtests_created_at'), table_name='backtests')
    op.drop_index('idx_backtest_user_strategy', table_name='backtests')
    op.drop_index('idx_backtest_date_range', table_name='backtests')
    op.drop_index(op.f('ix_assets_is_active'), table_name='assets')
    op.drop_index(op.f('ix_assets_asset_type'), table_name='assets')
    op.drop_index('idx_asset_symbol_type', table_name='assets')
    op.drop_index('idx_asset_active_type', table_name='assets')
    op.alter_column('assets', 'is_active',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###

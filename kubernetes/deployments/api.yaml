apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: ai-trading
  labels:
    app: api
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: api
        image: ${DOCKER_REGISTRY}/ai-trading-agent-api:${IMAGE_TAG}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: url
          - name: REDIS_URL
            valueFrom:
              secretKeyRef:
                name: redis-credentials
                key: url
          - name: JWT_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: api-credentials
                key: jwt_secret
          - name: JWT_ALGORITHM
            value: "HS256"
          - name: ACCESS_TOKEN_EXPIRE_MINUTES
            value: "120"
          - name: LOG_LEVEL
            value: "INFO"
          - name: SECURITY_AUDIT_ENABLED
            value: "true"
          - name: ENV
            value: "production"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
          - containerPort: 8000
            name: http
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: ai-trading
  labels:
    app: api
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress
  namespace: ai-trading
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - api.trading-agent.example.com
      secretName: trading-api-tls
  rules:
    - host: api.trading-agent.example.com
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 8000

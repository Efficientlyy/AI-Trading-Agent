{
  "environment_tests": {
    "initialization": {
      "status": "Passed",
      "details": {
        "env_type": "TradingRLEnvironment"
      }
    },
    "reset": {
      "status": "Passed",
      "details": {
        "state_type": "dict",
        "state_keys": [
          "price_1m",
          "price_5m",
          "price_15m",
          "price_1h",
          "rsi_1m",
          "rsi_5m",
          "rsi_15m",
          "rsi_1h",
          "macd_1m",
          "macd_5m",
          "macd_15m",
          "macd_1h",
          "bb_1m",
          "bb_5m",
          "bb_15m",
          "bb_1h",
          "order_imbalance",
          "spread",
          "volatility",
          "session",
          "price_change_1m",
          "price_change_5m",
          "price_change_15m",
          "param_imbalance_threshold",
          "param_momentum_threshold",
          "param_volatility_threshold",
          "param_rsi_threshold",
          "param_macd_threshold",
          "param_bb_threshold",
          "metric_pnl",
          "metric_sharpe_ratio",
          "metric_win_rate",
          "metric_trade_count",
          "metric_max_drawdown",
          "metric_volatility",
          "metric_profit_factor",
          "metric_recovery_factor"
        ],
        "state_size": 37
      }
    },
    "step": {
      "status": "Passed",
      "details": {
        "next_state_type": "dict",
        "reward_type": "float64",
        "done_type": "bool",
        "info_type": "dict"
      }
    },
    "reward": {
      "status": "Passed",
      "details": {
        "reward_range": [
          -3.2190112263473294e+42,
          -74.02851903537218
        ],
        "reward_mean": -3.21913899581025e+41,
        "reward_std": 9.656991096733624e+41
      }
    },
    "state": {
      "status": "Passed",
      "details": {
        "state_keys": [
          "price_1m",
          "price_5m",
          "price_15m",
          "price_1h",
          "rsi_1m",
          "rsi_5m",
          "rsi_15m",
          "rsi_1h",
          "macd_1m",
          "macd_5m",
          "macd_15m",
          "macd_1h",
          "bb_1m",
          "bb_5m",
          "bb_15m",
          "bb_1h",
          "order_imbalance",
          "spread",
          "volatility",
          "session",
          "price_change_1m",
          "price_change_5m",
          "price_change_15m",
          "param_imbalance_threshold",
          "param_momentum_threshold",
          "param_volatility_threshold",
          "param_rsi_threshold",
          "param_macd_threshold",
          "param_bb_threshold",
          "metric_pnl",
          "metric_sharpe_ratio",
          "metric_win_rate",
          "metric_trade_count",
          "metric_max_drawdown",
          "metric_volatility",
          "metric_profit_factor",
          "metric_recovery_factor",
          "metric_pnl_percent"
        ],
        "state_size": 38
      }
    },
    "status": "Passed"
  },
  "agent_tests": {
    "initialization": {
      "status": "Passed",
      "details": {
        "agent_type": "PPOAgent"
      }
    },
    "action_selection": {
      "status": "Passed",
      "details": {
        "action_type": "ndarray",
        "action_shape": [
          4
        ],
        "log_prob_type": "ndarray",
        "value_type": "ndarray"
      }
    },
    "update": {
      "status": "Passed",
      "details": {
        "update_result": {
          "actor_loss": 0.0,
          "critic_loss": 0.0,
          "entropy": 0.0,
          "update_status": "skipped",
          "reason": "buffer_inconsistency"
        }
      }
    },
    "save_load": {
      "status": "Passed",
      "details": {
        "save_success": true,
        "load_success": true,
        "actions_match": true,
        "save_path": "validation_results_fixed_v4/test_agent.pt"
      }
    },
    "status": "Passed"
  },
  "integration_tests": {
    "initialization": {
      "status": "Passed",
      "details": {
        "integration_type": "RLIntegration"
      }
    },
    "training": {
      "status": "Passed",
      "details": {
        "metrics_type": "dict",
        "metrics_keys": [
          "episode_rewards",
          "episode_lengths",
          "parameter_history",
          "performance_metrics"
        ]
      }
    },
    "evaluation": {
      "status": "Passed",
      "details": {
        "metrics_type": "dict",
        "metrics_keys": [
          "avg_reward",
          "avg_steps",
          "avg_pnl",
          "avg_win_rate",
          "rewards",
          "steps",
          "pnls",
          "win_rates"
        ]
      }
    },
    "parameter_extraction": {
      "status": "Passed",
      "details": {
        "params_type": "dict",
        "params_keys": [
          "imbalance_threshold",
          "momentum_threshold",
          "volatility_threshold",
          "rsi_threshold",
          "_metadata"
        ]
      }
    },
    "status": "Passed"
  },
  "performance_tests": {
    "environment_performance": {
      "status": "Passed",
      "details": {
        "avg_step_time": 0.000575113296508789,
        "max_step_time": 0.0006570816040039062,
        "min_step_time": 0.0005421638488769531
      }
    },
    "agent_performance": {
      "status": "Passed",
      "details": {
        "avg_select_action_time": 0.0005562996864318848,
        "max_select_action_time": 0.0009274482727050781,
        "min_select_action_time": 0.0004725456237792969,
        "update_time": 0.00021958351135253906
      }
    },
    "integration_performance": {
      "status": "Passed",
      "details": {
        "train_time": 0.005213499069213867,
        "eval_time": 0.0018146038055419922
      }
    },
    "optimization": {
      "status": "Passed",
      "details": {
        "optimization_skipped": true,
        "reason": "Optimization is a separate component"
      }
    },
    "status": "Passed"
  },
  "edge_case_tests": {
    "empty_data": {
      "status": "Passed",
      "details": {
        "empty_data_handled": false
      }
    },
    "invalid_action": {
      "status": "Failed",
      "details": {
        "invalid_action_results": [
          true,
          true,
          true,
          false,
          true
        ]
      }
    },
    "extreme_values": {
      "status": "Passed",
      "details": {
        "extreme_value_results": [
          true,
          true,
          true,
          true
        ]
      }
    },
    "error_handling": {
      "status": "Passed",
      "details": {
        "error_handled": true
      }
    },
    "status": "Failed"
  },
  "overall_status": "Failed"
}
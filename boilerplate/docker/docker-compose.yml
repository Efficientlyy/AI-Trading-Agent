version: '3.8'

services:
  # Database services
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: mexc-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mexc_trading
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - mexc-network

  # Message broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: mexc-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - mexc-network

  # Caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: mexc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mexc-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mexc-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - mexc-network

  grafana:
    image: grafana/grafana:latest
    container_name: mexc-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - prometheus

  # Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: mexc-jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    restart: unless-stopped
    networks:
      - mexc-network

  # Rust services
  market-data-processor:
    build:
      context: ./rust/market-data-processor
      dockerfile: Dockerfile
    container_name: mexc-market-data-processor
    ports:
      - "50051:50051"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/mexc_trading
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./rust/market-data-processor:/app
      # Special volume for Cargo registry to speed up builds on Windows
      - cargo-registry:/usr/local/cargo/registry
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - postgres
      - rabbitmq
      - redis

  order-execution:
    build:
      context: ./rust/order-execution
      dockerfile: Dockerfile
    container_name: mexc-order-execution
    ports:
      - "50052:50052"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/mexc_trading
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - MEXC_API_KEY=${MEXC_API_KEY:-}
      - MEXC_API_SECRET=${MEXC_API_SECRET:-}
      - PAPER_TRADING=true
    volumes:
      - ./rust/order-execution:/app
      # Special volume for Cargo registry to speed up builds on Windows
      - cargo-registry:/usr/local/cargo/registry
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - postgres
      - rabbitmq
      - redis

  # Node.js services
  decision-service:
    build:
      context: ./nodejs/decision-service
      dockerfile: Dockerfile
    container_name: mexc-decision-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/mexc_trading
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - MARKET_DATA_SERVICE_URL=market-data-processor:50051
      - ORDER_EXECUTION_URL=order-execution:50052
    volumes:
      - ./nodejs/decision-service:/app
      # Special volume for node_modules to speed up builds on Windows
      - decision-service-node-modules:/app/node_modules
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - market-data-processor
      - order-execution

  api-gateway:
    build:
      context: ./nodejs/api-gateway
      dockerfile: Dockerfile
    container_name: mexc-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DECISION_SERVICE_URL=http://decision-service:3001
    volumes:
      - ./nodejs/api-gateway:/app
      # Special volume for node_modules to speed up builds on Windows
      - api-gateway-node-modules:/app/node_modules
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - decision-service

  # Python services
  signal-generator:
    build:
      context: ./python/signal-generator
      dockerfile: Dockerfile
    container_name: mexc-signal-generator
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/mexc_trading
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_URL=redis://redis:6379
      - MARKET_DATA_SERVICE_URL=market-data-processor:50051
    volumes:
      - ./python/signal-generator:/app
      # Special volume for Python packages to speed up builds on Windows
      - signal-generator-venv:/app/.venv
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - market-data-processor

  # Frontend
  dashboard:
    build:
      context: ./frontend/dashboard
      dockerfile: Dockerfile
    container_name: mexc-dashboard
    ports:
      - "8080:80"
    volumes:
      - ./frontend/dashboard:/app
      # Special volume for node_modules to speed up builds on Windows
      - dashboard-node-modules:/app/node_modules
    restart: unless-stopped
    networks:
      - mexc-network
    depends_on:
      - api-gateway

networks:
  mexc-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  prometheus_data:
  grafana_data:
  cargo-registry:
  decision-service-node-modules:
  api-gateway-node-modules:
  dashboard-node-modules:
  signal-generator-venv:

                          +---------------------------+
                          |                           |
                          |  Python Trading Strategy  |
                          |                           |
                          +-------------+-------------+
                                        |
                                        | Interacts with
                                        v
+------------------+      +-------------+-------------+      +-----------------+
|                  |      |                           |      |                 |
|  Historical Data +----->+     Python Interface      +<---->+  Visualization  |
|                  |      |                           |      |                 |
+------------------+      +-------------+-------------+      +-----------------+
                                        |
                                        | PyO3 Bindings
                                        v
                          +-------------+-------------+
                          |                           |
                          |    Rust Trading Engine    |
                          |                           |
                          +---------------------------+
                                        |
                  +-------------------+-+------------------+
                  |                   |                    |
                  v                   v                    v
        +---------+-------+ +---------+-------+ +----------+--------+
        |                 | |                 | |                   |
        | Order Management| | Position Manager| | Performance Stats |
        |                 | |                 | |                   |
        +-----------------+ +-----------------+ +-------------------+
                  |                   |                    |
                  |                   |                    |
                  v                   v                    v
        +---------+-------+ +---------+-------+ +----------+--------+
        |                 | |                 | |                   |
        |  Market Orders  | |  Position P&L   | |   Trade Metrics   |
        |  Limit Orders   | |  Unrealized P&L | |   Risk Metrics    |
        |  Stop Orders    | |  Entry/Exit     | |   Return Metrics  |
        |                 | |                 | |                   |
        +-----------------+ +-----------------+ +-------------------+
```

This diagram shows the high-level architecture of the backtesting engine:

1. At the top is the Python trading strategy, which is developed by the user.

2. The strategy interacts with the Python interface layer, which also handles historical data input and visualization output.

3. The Python interface connects to the Rust trading engine via PyO3 bindings.

4. The Rust engine is split into three main components:
   - Order Management: Handles different types of orders (market, limit, stop)
   - Position Manager: Tracks positions and calculates P&L
   - Performance Statistics: Calculates various trading metrics

5. Each component has subcomponents that handle specific aspects of the backtesting process.

The design follows a clear separation of concerns and provides a high-performance core with a user-friendly Python interface. 
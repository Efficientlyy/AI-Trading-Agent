apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-agent-core
  labels:
    app: trading-agent
    component: core
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trading-agent
      component: core
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: trading-agent
        component: core
    spec:
      containers:
      - name: trading-agent-core
        image: ${REGISTRY}/${REPOSITORY_OWNER}/ai-trading-agent-core:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: ai-trading-agent-production-config
        - secretRef:
            name: ai-trading-agent-data-connections
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8081
          name: metrics
        volumeMounts:
        - name: trading-logs
          mountPath: /app/logs
        - name: shared-cache
          mountPath: /app/cache
      volumes:
      - name: trading-logs
        persistentVolumeClaim:
          claimName: trading-logs-pvc
      - name: shared-cache
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-service
  labels:
    app: trading-agent
    component: data-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trading-agent
      component: data-service
  template:
    metadata:
      labels:
        app: trading-agent
        component: data-service
    spec:
      containers:
      - name: data-service
        image: ${REGISTRY}/${REPOSITORY_OWNER}/ai-trading-agent-data-service:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        envFrom:
        - configMapRef:
            name: ai-trading-agent-production-config
        - secretRef:
            name: ai-trading-agent-data-connections
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: execution-service
  labels:
    app: trading-agent
    component: execution-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: trading-agent
      component: execution-service
  template:
    metadata:
      labels:
        app: trading-agent
        component: execution-service
    spec:
      containers:
      - name: execution-service
        image: ${REGISTRY}/${REPOSITORY_OWNER}/ai-trading-agent-execution-service:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "1000m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "2Gi"
        envFrom:
        - configMapRef:
            name: ai-trading-agent-production-config
        - secretRef:
            name: ai-trading-agent-data-connections
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-analyzer
  labels:
    app: trading-agent
    component: sentiment-analyzer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trading-agent
      component: sentiment-analyzer
  template:
    metadata:
      labels:
        app: trading-agent
        component: sentiment-analyzer
    spec:
      containers:
      - name: sentiment-analyzer
        image: ${REGISTRY}/${REPOSITORY_OWNER}/ai-trading-agent-sentiment:latest
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        envFrom:
        - configMapRef:
            name: ai-trading-agent-production-config
        - secretRef:
            name: ai-trading-agent-data-connections
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        ports:
        - containerPort: 8080
          name: http
